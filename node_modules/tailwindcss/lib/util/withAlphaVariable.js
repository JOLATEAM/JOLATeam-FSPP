"use strict";
<<<<<<< HEAD
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    withAlphaValue: ()=>withAlphaValue,
    default: ()=>withAlphaVariable
});
const _color = require("./color");
function withAlphaValue(color, alphaValue, defaultValue) {
    if (typeof color === "function") {
        return color({
            opacityValue: alphaValue
        });
    }
    let parsed = (0, _color.parseColor)(color, {
        loose: true
    });
    if (parsed === null) {
        return defaultValue;
    }
    return (0, _color.formatColor)({
        ...parsed,
        alpha: alphaValue
    });
}
function withAlphaVariable({ color , property , variable  }) {
    let properties = [].concat(property);
    if (typeof color === "function") {
        return {
            [variable]: "1",
            ...Object.fromEntries(properties.map((p)=>{
                return [
                    p,
                    color({
                        opacityVariable: variable,
                        opacityValue: `var(${variable})`
                    })
                ];
            }))
        };
    }
    const parsed = (0, _color.parseColor)(color);
    if (parsed === null) {
        return Object.fromEntries(properties.map((p)=>[
                p,
                color
            ]));
    }
    if (parsed.alpha !== undefined) {
        // Has an alpha value, return color as-is
        return Object.fromEntries(properties.map((p)=>[
                p,
                color
            ]));
    }
    return {
        [variable]: "1",
        ...Object.fromEntries(properties.map((p)=>{
            return [
                p,
                (0, _color.formatColor)({
                    ...parsed,
                    alpha: `var(${variable})`
                })
            ];
        }))
    };
}
=======

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.toRgba = toRgba;
exports.default = withAlphaVariable;

var _color = _interopRequireDefault(require("color"));

var _lodash = _interopRequireDefault(require("lodash"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function hasAlpha(color) {
  return color.startsWith('rgba(') || color.startsWith('hsla(') || color.startsWith('#') && color.length === 9 || color.startsWith('#') && color.length === 5;
}

function toRgba(color) {
  const [r, g, b, a] = (0, _color.default)(color).rgb().array();
  return [r, g, b, a === undefined && hasAlpha(color) ? 1 : a];
}

function withAlphaVariable({
  color,
  property,
  variable
}) {
  if (_lodash.default.isFunction(color)) {
    return {
      [variable]: '1',
      [property]: color({
        opacityVariable: variable
      })
    };
  }

  try {
    const [r, g, b, a] = toRgba(color);

    if (a !== undefined) {
      return {
        [property]: color
      };
    }

    return {
      [variable]: '1',
      [property]: [color, `rgba(${r}, ${g}, ${b}, var(${variable}))`]
    };
  } catch (error) {
    return {
      [property]: color
    };
  }
}
>>>>>>> d64897a83ee05dfaaf4e857f6a92bd00c77921de
